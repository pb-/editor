/**
 * Minified by jsDelivr using Terser v5.14.1.
 * Original file: /npm/node-diff3@3.1.2/dist/index.iife.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var Diff3=(()=>{var e,t=Object.defineProperty,n=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,r=Object.prototype.hasOwnProperty,o={};function l(e,t){let n={};for(let e=0;e<t.length;e++){const f=t[e];n[f]?n[f].push(e):n[f]=[e]}let f=[{buffer1index:-1,buffer2index:-1,chain:null}];for(let t=0;t<e.length;t++){const r=n[e[t]]||[];let o=0,l=f[0];for(let e=0;e<r.length;e++){const n=r[e];let a;for(a=o;a<f.length&&!(f[a].buffer2index<n&&(a===f.length-1||f[a+1].buffer2index>n));a++);if(a<f.length){const e={buffer1index:t,buffer2index:n,chain:f[a]};if(o===f.length?f.push(l):f[o]=l,o=a+1,l=e,o===f.length)break}}f[o]=l}return f[f.length-1]}function a(e,t){const n=l(e,t);let f=[],r=e.length,o=t.length,a={common:[]};function u(){a.common.length&&(a.common.reverse(),f.push(a),a={common:[]})}for(let l=n;null!==l;l=l.chain){let n={buffer1:[],buffer2:[]};for(;--r>l.buffer1index;)n.buffer1.push(e[r]);for(;--o>l.buffer2index;)n.buffer2.push(t[o]);(n.buffer1.length||n.buffer2.length)&&(u(),n.buffer1.reverse(),n.buffer2.reverse(),f.push(n)),r>=0&&a.common.push(e[r])}return u(),f.reverse(),f}function u(e,t){const n=l(e,t);let f=[],r=e.length,o=t.length;for(let l=n;null!==l;l=l.chain){const n=r-l.buffer1index-1,a=o-l.buffer2index-1;r=l.buffer1index,o=l.buffer2index,(n||a)&&f.push({buffer1:[r+1,n],buffer1Content:e.slice(r+1,r+1+n),buffer2:[o+1,a],buffer2Content:t.slice(o+1,o+1+a)})}return f.reverse(),f}function c(e,t){const n=l(e,t);let f=[],r=e.length,o=t.length;function a(e,t,n){let f=[];for(let r=0;r<n;r++)f.push(e[t+r]);return{offset:t,length:n,chunk:f}}for(let l=n;null!==l;l=l.chain){const n=r-l.buffer1index-1,u=o-l.buffer2index-1;r=l.buffer1index,o=l.buffer2index,(n||u)&&f.push({buffer1:a(e,l.buffer1index+1,n),buffer2:a(t,l.buffer2index+1,u)})}return f.reverse(),f}function b(e,t,n){let f=[];function r(e,t){f.push({ab:t,oStart:e.buffer1[0],oLength:e.buffer1[1],abStart:e.buffer2[0],abLength:e.buffer2[1]})}u(t,e).forEach((e=>r(e,"a"))),u(t,n).forEach((e=>r(e,"b"))),f.sort(((e,t)=>e.oStart-t.oStart));let o=[],l=0;function a(e){e>l&&(o.push({stable:!0,buffer:"o",bufferStart:l,bufferLength:e-l,bufferContent:t.slice(l,e)}),l=e)}for(;f.length;){let r=f.shift(),u=r.oStart,c=r.oStart+r.oLength,b=[r];for(a(u);f.length;){const e=f[0],t=e.oStart;if(t>c)break;c=Math.max(c,t+e.oLength),b.push(f.shift())}if(1===b.length){if(r.abLength>0){const t="a"===r.ab?e:n;o.push({stable:!0,buffer:r.ab,bufferStart:r.abStart,bufferLength:r.abLength,bufferContent:t.slice(r.abStart,r.abStart+r.abLength)})}}else{let f={a:[e.length,-1,t.length,-1],b:[n.length,-1,t.length,-1]};for(;b.length;){r=b.shift();const e=r.oStart,t=e+r.oLength,n=r.abStart,o=n+r.abLength;let l=f[r.ab];l[0]=Math.min(n,l[0]),l[1]=Math.max(o,l[1]),l[2]=Math.min(e,l[2]),l[3]=Math.max(t,l[3])}const l=f.a[0]+(u-f.a[2]),a=f.a[1]+(c-f.a[3]),i=f.b[0]+(u-f.b[2]),s=f.b[1]+(c-f.b[3]);let h={stable:!1,aStart:l,aLength:a-l,aContent:e.slice(l,a),oStart:u,oLength:c-u,oContent:t.slice(u,c),bStart:i,bLength:s-i,bContent:n.slice(i,s)};o.push(h)}l=c}return a(t.length),o}function i(e,t,n,f){f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/},f),"string"==typeof e&&(e=e.split(f.stringSeparator)),"string"==typeof t&&(t=t.split(f.stringSeparator)),"string"==typeof n&&(n=n.split(f.stringSeparator));let r=[];const o=b(e,t,n);let l=[];function a(){l.length&&r.push({ok:l}),l=[]}return o.forEach((e=>{e.stable?l.push(...e.bufferContent):f.excludeFalseConflicts&&function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}(e.aContent,e.bContent)?l.push(...e.aContent):(a(),r.push({conflict:{a:e.aContent,aIndex:e.aStart,o:e.oContent,oIndex:e.oStart,b:e.bContent,bIndex:e.bStart}}))})),a(),r}function s(e,t,n,f){const r="<<<<<<<"+((f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/,label:{}},f)).label.a?` ${f.label.a}`:""),o="|||||||"+(f.label.o?` ${f.label.o}`:""),l=">>>>>>>"+(f.label.b?` ${f.label.b}`:""),a=i(e,t,n,f);let u=!1,c=[];return a.forEach((e=>{e.ok?c=c.concat(e.ok):e.conflict&&(u=!0,c=c.concat([r],e.conflict.a,[o],e.conflict.o,["======="],e.conflict.b,[l]))})),{conflict:u,result:c}}function h(e,t,n,f){const r="<<<<<<<"+((f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/,label:{}},f)).label.a?` ${f.label.a}`:""),o=">>>>>>>"+(f.label.b?` ${f.label.b}`:""),l=i(e,t,n,f);let a=!1,u=[];return l.forEach((e=>{e.ok?u=u.concat(e.ok):e.conflict&&(a=!0,u=u.concat([r],e.conflict.a,["======="],e.conflict.b,[o]))})),{conflict:a,result:u}}function g(e,t,n,f){const r="<<<<<<<"+((f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/,label:{}},f)).label.a?` ${f.label.a}`:""),o=">>>>>>>"+(f.label.b?` ${f.label.b}`:""),l=i(e,t,n,f);let u=!1,c=[];return l.forEach((e=>{if(e.ok)c=c.concat(e.ok);else{const t=a(e.conflict.a,e.conflict.b);for(let e=0;e<t.length;e++){let n=t[e];n.common?c=c.concat(n.common):(u=!0,c=c.concat([r],n.buffer1,["======="],n.buffer2,[o]))}}})),{conflict:u,result:c}}function p(e,t){let n=[],f=0;function r(t){for(;f<t;)n.push(e[f]),f++}for(let e=0;e<t.length;e++){let o=t[e];r(o.buffer1.offset);for(let e=0;e<o.buffer2.chunk.length;e++)n.push(o.buffer2.chunk[e]);f+=o.buffer1.length}return r(e.length),n}function d(e){return e.map((e=>({buffer1:{offset:e.buffer1.offset,length:e.buffer1.length},buffer2:{chunk:e.buffer2.chunk}})))}function m(e){return e.map((e=>({buffer1:e.buffer2,buffer2:e.buffer1})))}return((e,n)=>{for(var f in n)t(e,f,{get:n[f],enumerable:!0})})(o,{LCS:()=>l,diff3Merge:()=>i,diff3MergeRegions:()=>b,diffComm:()=>a,diffIndices:()=>u,diffPatch:()=>c,invertPatch:()=>m,merge:()=>h,mergeDiff3:()=>s,mergeDigIn:()=>g,patch:()=>p,stripPatch:()=>d}),e=o,((e,o,l,a)=>{if(o&&"object"==typeof o||"function"==typeof o)for(let u of f(o))r.call(e,u)||u===l||t(e,u,{get:()=>o[u],enumerable:!(a=n(o,u))||a.enumerable});return e})(t({},"__esModule",{value:!0}),e)})();
//# sourceMappingURL=/sm/79935208421b407dd73935177fe2af4d80ba426243250d8a6b6bf2565a571792.map